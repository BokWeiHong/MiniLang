// This is the abstract syntax tree example for the AllGrammer.lang

StartProgram
|- MainMethodDeclaration
|- class
   |- Main
   |- (
   |- )
   |- {
   |- StatementList
      |- Statement
      |- Assignment
         |- DataType
            |- int
         |- Identifier
            |- m
         |- =
         |- Expression
            |- Term
               |- 3
         |- ;
      |- Statement
      |- Assignment
         |- DataType
            |- int
         |- Identifier
            |- n
         |- ;
      |- Statement
      |- InputStatement
         |- in
         |- :
         |- Identifier
            |- n
         |- ;
      |- Statement
      |- Assignment
         |- DataType
            |- int
         |- Identifier
            |- x
         |- =
         |- Expression
            |- Term
               |- m
            |- *
         |- Expression
            |- Term
               |- n
         |- ;
      |- Statement
      |- IfStatement
         |- if
         |- (
         |- BooleanExpression
            |- RelationalStatement
               |- Expression
                  |- Term
                     |- x
               |- ==
               |- Expression
                  |- Term
                     |- 4
         |- )
         |- {
         |- StatementList
            |- Statement
            |- OutputStatement
               |- out
               |- :
               |- Expression
                  |- Term
                     |- "x is greater than 4"
               |- ;
         |- }
      |- else
      |- {
      |- StatementList
         |- Statement
         |- OutputStatement
            |- out
            |- :
            |- Expression
               |- Term
                  |- "x is less than 4"
            |- ;
      |- }
      |- Statement
      |- LoopStatement
         |- while
         |- (
         |- BooleanExpression
            |- RelationalStatement
               |- Expression
                  |- Term
                     |- x
               |- <
               |- Expression
                  |- Term
                     |- 10
         |- )
         |- {
         |- StatementList
            |- Statement
            |- Assignment
            |- Identifier
               |- x
            |- =
            |- Expression
               |- Term
                  |- x
               |- +
            |- Expression
               |- Term
                  |- 1
            |- ;
         |- }
      |- Statement
      |- IfStatement
         |- if
         |- (
         |- BooleanExpression
            |- true
         |- )
         |- {
         |- StatementList
            |- Statement
            |- OutputStatement
               |- out
               |- :
               |- Expression
                  |- Term
                     |- "true"
               |- ;
         |- }
   |- }
EndProgram